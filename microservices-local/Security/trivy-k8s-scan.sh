#!/bin/bash

# Trivy Kubernetes Cluster Security Scanning
echo "☸️  Trivy Kubernetes Security Scanning"
echo "======================================"

# Create reports directory
mkdir -p reports/k8s
TIMESTAMP=$(date +%Y%m%d_%H%M%S)

echo "🔍 Starting Kubernetes cluster security scan..."
echo ""

# Function to scan namespace
scan_namespace() {
    local namespace=$1
    echo "📂 Scanning namespace: $namespace"
    
    # Scan workloads in namespace
    trivy k8s --report summary --format json --output "reports/k8s/${namespace}_workloads_${TIMESTAMP}.json" "namespace/$namespace"
    trivy k8s --report summary --format table --output "reports/k8s/${namespace}_workloads_${TIMESTAMP}.txt" "namespace/$namespace"
    
    # Scan configurations
    trivy k8s --report config --format json --output "reports/k8s/${namespace}_config_${TIMESTAMP}.json" "namespace/$namespace"
    trivy k8s --report config --format table --output "reports/k8s/${namespace}_config_${TIMESTAMP}.txt" "namespace/$namespace"
    
    echo "✅ Namespace $namespace scan complete"
    echo ""
}

# Scan critical namespaces
NAMESPACES=("microservices" "istio-system" "kube-system" "monitoring" "observability")

for ns in "${NAMESPACES[@]}"; do
    if kubectl get namespace "$ns" &>/dev/null; then
        scan_namespace "$ns"
    else
        echo "⚠️  Namespace $ns not found, skipping..."
    fi
done

# Full cluster scan
echo "🌐 Performing full cluster scan..."
trivy k8s --report all --format json --output "reports/k8s/cluster_full_scan_${TIMESTAMP}.json" cluster
trivy k8s --report all --format table --output "reports/k8s/cluster_full_scan_${TIMESTAMP}.txt" cluster

# Scan specific resource types
echo "🔍 Scanning specific resource types..."

# Scan deployments
echo "📦 Scanning Deployments..."
trivy k8s --report config --format table --output "reports/k8s/deployments_${TIMESTAMP}.txt" deploy --all-namespaces

# Scan services
echo "🌐 Scanning Services..."
trivy k8s --report config --format table --output "reports/k8s/services_${TIMESTAMP}.txt" service --all-namespaces

# Scan ingress/gateways
echo "🚪 Scanning Ingress and Gateways..."
trivy k8s --report config --format table --output "reports/k8s/ingress_${TIMESTAMP}.txt" ingress --all-namespaces

# Scan RBAC
echo "🔐 Scanning RBAC..."
trivy k8s --report config --format table --output "reports/k8s/rbac_${TIMESTAMP}.txt" clusterrole,role,clusterrolebinding,rolebinding --all-namespaces

# Generate cluster security summary
echo "📊 Generating cluster security summary..."

cat > "reports/k8s/cluster_security_summary_${TIMESTAMP}.md" << EOF
# Kubernetes Cluster Security Report

**Scan Date:** $(date)  
**Timestamp:** ${TIMESTAMP}  
**Cluster:** $(kubectl config current-context)

## Scanned Namespaces
$(printf '- %s\n' "${NAMESPACES[@]}")

## Critical Security Issues

### High Priority Vulnerabilities
\`\`\`
$(find reports/k8s -name "*${TIMESTAMP}.json" -exec jq -r '.Results[]?.Misconfigurations[]? | select(.Severity == "HIGH") | .ID + ": " + .Title' {} \; 2>/dev/null | sort | uniq | head -10)
\`\`\`

### Critical Vulnerabilities  
\`\`\`
$(find reports/k8s -name "*${TIMESTAMP}.json" -exec jq -r '.Results[]?.Misconfigurations[]? | select(.Severity == "CRITICAL") | .ID + ": " + .Title' {} \; 2>/dev/null | sort | uniq | head -10)
\`\`\`

### Security Recommendations

1. **Pod Security Standards**: Ensure all pods run with security contexts
2. **Network Policies**: Implement network segmentation
3. **RBAC**: Follow principle of least privilege
4. **Image Security**: Use minimal base images and scan regularly
5. **Secrets Management**: Use Kubernetes secrets properly

## Resource Summaries

### Deployments with Issues
\`\`\`
$(grep -h "FAIL\|HIGH\|CRITICAL" reports/k8s/deployments_${TIMESTAMP}.txt 2>/dev/null | head -5)
\`\`\`

### Services with Issues  
\`\`\`
$(grep -h "FAIL\|HIGH\|CRITICAL" reports/k8s/services_${TIMESTAMP}.txt 2>/dev/null | head -5)
\`\`\`

### RBAC Issues
\`\`\`
$(grep -h "FAIL\|HIGH\|CRITICAL" reports/k8s/rbac_${TIMESTAMP}.txt 2>/dev/null | head -5)
\`\`\`

## Files Generated
$(ls -la reports/k8s/*${TIMESTAMP}*)

---
*Generated by Trivy Kubernetes Scanner*
EOF

echo ""
echo "✅ Kubernetes security scanning complete!"
echo "📁 Reports saved in: ./reports/k8s/"
echo "📄 Summary report: reports/k8s/cluster_security_summary_${TIMESTAMP}.md"
echo ""
echo "🔍 Quick view of critical issues:"
echo "   cat reports/k8s/cluster_security_summary_${TIMESTAMP}.md"
echo ""
echo "🔍 Full cluster scan results:"
echo "   cat reports/k8s/cluster_full_scan_${TIMESTAMP}.txt"
