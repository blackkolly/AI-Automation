apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: microservices-platform
  namespace: gitops
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/microservices-platform.git
    targetRevision: main
    path: kubernetes/manifests
  destination:
    server: https://kubernetes.default.svc
    namespace: microservices
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring-stack
  namespace: gitops
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/microservices-platform.git
    targetRevision: main
    path: kubernetes/monitoring
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: security-stack
  namespace: gitops
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/microservices-platform.git
    targetRevision: main
    path: kubernetes/security
  destination:
    server: https://kubernetes.default.svc
    namespace: security
  syncPolicy:
    automated:
      prune: false  # Manual sync for security components
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 3
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 5m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kafka-cluster
  namespace: gitops
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/microservices-platform.git
    targetRevision: main
    path: kubernetes/kafka
  destination:
    server: https://kubernetes.default.svc
    namespace: kafka
  syncPolicy:
    automated:
      prune: false  # Manual sync for stateful services
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 3
      backoff:
        duration: 15s
        factor: 2
        maxDuration: 10m
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: microservices
  namespace: gitops
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: Microservices Platform Project
  sourceRepos:
  - 'https://github.com/your-org/microservices-platform.git'
  - 'https://github.com/your-org/microservices-config.git'
  destinations:
  - namespace: microservices
    server: https://kubernetes.default.svc
  - namespace: monitoring
    server: https://kubernetes.default.svc
  - namespace: security
    server: https://kubernetes.default.svc
  - namespace: kafka
    server: https://kubernetes.default.svc
  - namespace: istio-system
    server: https://kubernetes.default.svc
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRole
  - group: 'rbac.authorization.k8s.io'
    kind: ClusterRoleBinding
  - group: 'apiextensions.k8s.io'
    kind: CustomResourceDefinition
  - group: 'admissionregistration.k8s.io'
    kind: MutatingAdmissionWebhook
  - group: 'admissionregistration.k8s.io'
    kind: ValidatingAdmissionWebhook
  namespaceResourceWhitelist:
  - group: ''
    kind: '*'
  - group: 'apps'
    kind: '*'
  - group: 'extensions'
    kind: '*'
  - group: 'networking.k8s.io'
    kind: '*'
  - group: 'policy'
    kind: '*'
  - group: 'autoscaling'
    kind: '*'
  - group: 'batch'
    kind: '*'
  - group: 'monitoring.coreos.com'
    kind: '*'
  - group: 'argoproj.io'
    kind: '*'
  roles:
  - name: admin
    description: Admin role for microservices project
    policies:
    - p, proj:microservices:admin, applications, *, microservices/*, allow
    - p, proj:microservices:admin, repositories, *, *, allow
    - p, proj:microservices:admin, certificates, *, *, allow
    - p, proj:microservices:admin, clusters, *, *, allow
    groups:
    - microservices-admins
  - name: developer
    description: Developer role for microservices project
    policies:
    - p, proj:microservices:developer, applications, get, microservices/*, allow
    - p, proj:microservices:developer, applications, sync, microservices/*, allow
    - p, proj:microservices:developer, applications, action/*, microservices/*, allow
    - p, proj:microservices:developer, repositories, get, *, allow
    groups:
    - microservices-developers
  syncWindows:
  - kind: allow
    schedule: '0 9 * * MON-FRI'
    duration: 8h
    applications:
    - microservices-platform
    manualSync: true
  - kind: deny
    schedule: '0 18 * * FRI'
    duration: 60h
    applications:
    - '*'
    manualSync: false
