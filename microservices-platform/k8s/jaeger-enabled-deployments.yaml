# Kubernetes ConfigMap for Jaeger Tracing Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-config
  namespace: microservices
data:
  JAEGER_AGENT_HOST: "jaeger-agent.observability.svc.cluster.local"
  JAEGER_AGENT_PORT: "6832"
  JAEGER_COLLECTOR_URL: "http://jaeger-collector.observability.svc.cluster.local:14268/api/traces"
  JAEGER_SAMPLER_TYPE: "const"
  JAEGER_SAMPLER_PARAM: "1"
  JAEGER_REPORTER_LOG_SPANS: "false"

---
# Updated API Gateway Deployment with Jaeger Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
      annotations:
        # Force pod restart when config changes
        configmap/checksum: "{{ .Values.configChecksum }}"
    spec:
      containers:
        - name: api-gateway
          image: api-gateway:latest
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: AUTH_SERVICE_URL
              value: "http://auth-service.microservices.svc.cluster.local:3001"
            - name: ORDER_SERVICE_URL
              value: "http://order-service.microservices.svc.cluster.local:3003"
            - name: PRODUCT_SERVICE_URL
              value: "http://product-service.microservices.svc.cluster.local:8080"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
          envFrom:
            - configMapRef:
                name: jaeger-config
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"

---
# Updated Order Service Deployment with Jaeger Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
      annotations:
        configmap/checksum: "{{ .Values.configChecksum }}"
    spec:
      containers:
        - name: order-service
          image: order-service:latest
          ports:
            - containerPort: 3003
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3003"
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: mongodb-uri
            - name: KAFKA_BROKERS
              value: "kafka-service.kafka.svc.cluster.local:9092"
            - name: REDIS_URL
              value: "redis://redis-service.microservices.svc.cluster.local:6379"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
          envFrom:
            - configMapRef:
                name: jaeger-config
          livenessProbe:
            httpGet:
              path: /health
              port: 3003
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3003
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "400m"

---
# Updated Auth Service Deployment with Jaeger Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: microservices
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        configmap/checksum: "{{ .Values.configChecksum }}"
    spec:
      containers:
        - name: auth-service
          image: auth-service:latest
          ports:
            - containerPort: 3001
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3001"
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: mongodb-uri
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: BCRYPT_ROUNDS
              value: "12"
          envFrom:
            - configMapRef:
                name: jaeger-config
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
