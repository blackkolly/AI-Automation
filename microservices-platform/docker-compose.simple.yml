services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: microservices-postgres
    environment:
      POSTGRES_DB: microservices
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: microservices-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  # Frontend (Nginx + Static Files)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: microservices-frontend
    ports:
      - "8080:8080"
    environment:
      API_BASE_URL: http://localhost:3001/api
      WS_BASE_URL: ws://localhost:3001
    networks:
      - microservices-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  microservices-network:
    driver: bridge
